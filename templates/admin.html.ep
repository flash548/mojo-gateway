<html>
  <head>
    <title>Admin Interface</title>
    <link rel="stylesheet" href="/css/dracula-ui.css" />
    <link rel="stylesheet" href="/css/tachyons.min.css" />
  </head>
  <body class="drac-bg-black">
    <div class="w-100 flex justify-center flex-column">
      <div>
        <div>
          <h2 class="drac-heading drac-heading-xl drac-text-white">
            Loading...
          </h2>
        </div>
      </div>
    </di>v
    <script type="module">
        import { h, Component, render } from '/js/preact.js';
        import htm from '/js/htm.js';
        const html = htm.bind(h);

        class App extends Component {
          constructor(props) {
            super(props);
            this.state = {
              users: [],
              show: false,
              selectedUser: {},
              showConfirm: false,
            };
          }

          componentDidMount() {
            fetch("/admin/users", {
              method: "GET",
            })
              .then((result) => result.json())
              .then((users) => this.setState({ users }))
              .catch((err) => {});
          }

          deleteUser = (user) => {
            fetch(`/admin/users?email=${user.email.toLowerCase()}`, {
              method: "DELETE",
            })
            .then((result) => {
              this.setState({ users: this.state.users.filter(u => u.email.toLowerCase() !== user.email.toLowerCase()), showConfirm: false});
            })
            .catch((err) => { console.log(err)});
          }

          render() {
            return html`
              <div class="relative flex flex-column w-100 pa2 vh-100">
                <${TabPanel} title="Mojo::Gateway Admin" tabs=${[
                  { title: "Users" }]}
                />
                <div class="flex w-100 justify-end">
                  <button
                    onClick=${() => this.setState({
                      show: true,
                      action: 'Add User',
                      selectedUser: null })}
                    class="drac-btn drac-bg-purple ma2"
                    type="button"
                  >
                    Add User
                  </button>
                </div>
                ${ this.state.showConfirm &&
                  html`<${Confirm} text="Really Delete?" cancel=${() => this.setState({ showConfirm: false })} confirm=${() => this.deleteUser(this.state.selectedUser)} />`
                }
                ${ this.state.show &&
                  html`<${EditPanel}
                    title=${this.state.action}
                    backgroundClicked=${() => this.setState({ show: false })}
                    onAddUser=${(user) => this.setState({ users: [...this.state.users, user ]})}
                    onEditUser=${(user) => {
                      const index = this.state.users.findIndex((elem) => elem.email === user.email);
                      if (index !== undefined) {
                        const updatedState = [ ...this.state.users ];
                        updatedState[index] = user;
                        this.setState({ users: [ ...updatedState ]});
                      }
                    }}
                    selectedUser=${this.state.selectedUser}
                    closeClicked=${() => this.setState({ show: false })} />` }
                <${UserTable}
                  users=${this.state.users}
                  rowClicked=${(user) => this.setState({ action: 'Edit User', show: true, selectedUser: {...user} })}
                  rowDelete=${(user) => this.setState({ showConfirm: true, selectedUser: {...user} })}
                />
              </div>
          `;
        }
      }

      %= include 'admin/UserTable', format => 'js'
      %= include 'admin/TabPanel', format => 'js'
      %= include 'admin/EditPanel', format => 'js'
      %= include 'admin/Checkbox', format => 'js'
      %= include 'admin/Confirm', format => 'js'

      render(html`<${App} />`, document.body);
    </script>
  </body>
</html>
