/**
 * fetchPage: (page, pageSize) => ({ results: T[], pageSize: number, page: number, total_elements: number, total_pages: number })
 * pageSize: number
 * columns: [ { field: string, name: string, sortable: boolean } ]
 * @param props 
 * @returns 
 */

export function UserTable(props) {
  const [state, setState] = useState({
    sortColumn: "email",
    sortDirection: "asc",
    searchEmail: "",
  });

  function sortList(list) {
    list.sort((a, b) => {
      if (state.sortDirection === "asc") {
        return a[state.sortColumn] > b[state.sortColumn] ? 1 : -1;
      } else {
        return a[state.sortColumn] > b[state.sortColumn] ? -1 : 1;
      }
    });

    return list;
  }

  return html`<div class="pa2 flex flex-column w-100 h-100">
    <div class=" flex justify-center mb4">
      <div class="rux-form-field w-50">
        <input
          id="user-search"
          type="search"
          placeholder="Search Email"
          value=${state.searchEmail}
          class="rux-input"
          style=${{
            color: "var(--defaultText) ",
            backgroundColor: "var(--tableHeaderBackgroundColor) ",
          }}
          onInput=${(e) => {
            setState({ ...state, searchEmail: e.target.value });
          }}
        />
      </div>
    </div>
    <div style=${{ overflowY: "auto", maxHeight: "75vh" }}>
      <table class="rux-table">
        <tr>
          <th class="flex items-center">
            Email${" "}${state.sortDirection === "asc"
              ? html`<${Icon}
                  icon="arrow-upward"
                  onClick=${() => setState({ ...state, sortDirection: "desc" })}
                />`
              : html`<${Icon}
                  icon="arrow-downward"
                  onClick=${() => setState({ ...state, sortDirection: "asc" })}
                />`}
          </th>
          <th class="tc">Admin?</th>
          <th class="tc">Password Reset?</th>
          <th class="tc">Locked?</th>
          <th>Last Reset</th>
          <th>Last Login</th>
          <th></th>
          <th></th>
        </tr>
        ${sortList(props.users)
          .filter((user) => user.email.includes(state.searchEmail))
          .map(
            (user) => html`
              <tr>
                <td>${user.email}</td>
                <td>
                  <span class="w-100 flex justify-center">
                    <${Status} status=${user.is_admin ? "standby" : "off"} />
                  </span>
                </td>
                <td>
                  <span class="w-100 flex justify-center">
                    <${Status}
                      status=${user.reset_password ? "standby" : "off"}
                    />
                  </span>
                </td>
                <td>
                  <span class="w-100 flex justify-center">
                    <${Status}
                      status=${user.locked ? "standby" : "off"}
                    />
                  </span>
                </td>
                <td>
                  ${user.last_reset
                    ? new Date(user.last_reset + "Z").toLocaleString()
                    : "Never"}
                </td>
                <td>
                  ${user.last_login
                    ? new Date(user.last_login + "Z").toLocaleString()
                    : "Never"}
                </td>
                <td>
                  <${Icon}
                    icon="edit"
                    onClick=${() => props.rowClicked({ ...user })}
                  />
                </td>
                <td>
                  <${Icon}
                    icon="delete"
                    onClick=${() => props.rowDelete({ ...user })}
                  />
                </td>
              </tr>
            `
          )}
      </table>
    </div>
  </div>`;
}
