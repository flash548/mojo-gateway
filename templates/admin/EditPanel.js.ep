export class EditPanel extends Component {
  constructor(props) {
    super(props);
    this.isEdit = props.selectedUser !== null;

    this.state = props.selectedUser || {
      email: '',
      password: '',
      reset_password: true,
      is_admin: false,
      dod_id: 0,
    };
  }

  async postUser(props) {
    let result = await fetch('/admin/users', {
      method: this.isEdit ? 'PUT' : 'POST',
      body: JSON.stringify({ ...this.state })
    });
    if (result.status === 201) {
      let body = await result.json();
      this.isEdit ? props.onEditUser(body) : props.onAddUser(body);
      props.closeClicked();
    }
  }

  render(props) {
    return html`
      <div
        onClick=${() => props.backgroundClicked && props.backgroundClicked()}
        class="z-1000 absolute left-0 top-0 w-100 vh-100 bg-black-50"
      >
        <div
          class="pa3 flex flex-column absolute z-2000 right-0 top-0 w-20 vh-100"
          style="background-color: var(--surfaceElements);"
          onClick=${(e) => { e.stopPropagation(); }}
        >
          <div class="flex flex-row w-100 justify-between">
            <h2>${props.title}</h2>
            <${Icon} icon="close" onClick=${() => props.closeClicked && props.closeClicked()}/>
          </div>
          <div class="mt3 flex flex-column justify-start items-start">
            <form onSubmit=${(e) => { 
                e.preventDefault(); 
                this.postUser(props);
              }}>
              <div class="rux-form-field mb2">
                <label for="user-email" class="rux-form-field__label">User Email</label>
                <input id="user-email" type="email" value=${this.state.email} onChange=${(e) => this.setState({ email: e.target.value })} />
              </div>
              <div class="rux-form-field mb2">
                <label for="user-password" class="rux-form-field__label">User Password</label>
                <input id="user-password" type="password" value=${this.state.password} onChange=${(e) => this.setState({ password: e.target.value })} />
              </div>
              <div class="rux-form-field mb2">
                <label for="user-dod_id" class="rux-form-field__label">User DoDID</label>
                <input id="user-dod_id" value=${this.state.dod_id} onChange=${(e) => this.setState({ dod_id: e.target.value })} />
              </div>
              <div class="rux-form-field mb2">
                <${Checkbox} id="user-reset" label="Expire Password?" checked=${this.state.reset_password} onClick=${(checked) => this.setState({ reset_password: checked })} />
              </div>
              <div class="rux-form-field mb2">
                <${Checkbox} id="user-admin" label="Is Admin?" checked=${this.state.is_admin} onClick=${(checked) => this.setState({ is_admin: checked })} />
              </div>
              <button type="submit" class="rux-button ma2">Submit</button>
            </form>
          </div>
        </div>
      </div>
    `;
  }
}
